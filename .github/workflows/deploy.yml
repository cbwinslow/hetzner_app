name: Deploy Stack

on:
  push:
    branches: [work]
  workflow_dispatch:

jobs:
  test:
    name: Pre-Deployment Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit pytest
          if [ -f src/fastapi_app/requirements.txt ]; then pip install -r src/fastapi_app/requirements.txt; fi
          if [ -f agentic-rag-knowledge-graph/requirements.txt ]; then pip install -r agentic-rag-knowledge-graph/requirements.txt; fi
      - name: Shell syntax check
        run: bash -n deploy.sh
      - name: Run pre-commit
        run: pre-commit run --files $(git ls-files)
      - name: Run tests
        run: pytest

  deploy:
    name: Deploy Stack
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            set -e
            cd ${{ secrets.DEPLOY_PATH }}
            git pull
            sudo bash deploy.sh
            APP_ROOT=$(sudo bash -lc 'source config.sh; echo $APP_ROOT')
            sudo docker-compose -f "$APP_ROOT/docker-compose.yml" up -d

  post-deploy:
    name: Post-Deployment Checks
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Verify services
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            set -e
            cd ${{ secrets.DEPLOY_PATH }}
            APP_ROOT=$(sudo bash -lc 'source config.sh; echo $APP_ROOT')
            DOMAIN=$(sudo bash -lc 'source config.sh; echo $DOMAIN')
            sudo docker-compose -f "$APP_ROOT/docker-compose.yml" ps
            curl -f "https://${DOMAIN}" || exit 1
